// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// -- 参加者集約
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
model PersonalInfo {
  name String
  mailAddress String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  participant Participant @relation(fields: [participantId], references: [participantId])
  participantId String
}

model ParticipantHavingTask{
    participantHavingTaskId String @id
    taskProgress String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    task Task @relation(fields: [taskId], references: [taskId])
    taskId String
    participant Participant @relation(fields: [participantId], references: [participantId])
    participantId String
}

model Participant {
  participantId String @id
  personalInfo PersonalInfo?
  participantHavingTask ParticipantHavingTask[]
  enrolledParticipant String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  pair Pair? @relation(fields: [pairName], references: [pairName])
  pairName String?

}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// -- ペア集約
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
model Pair {
  pairName String @unique
  participants Participant[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// -- 課題集約
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
model Task {
  taskId String @id
  taskNo Int @unique
  taskName String @unique
  description String @unique
  taskGroupName String
  participantHavingTask ParticipantHavingTask[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

