// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// -- 設定系データ
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
model EnrolledStatus{
     enrolledStatus String @id
     enrolledParticipant EnrolledParticipant[]
 }

model ProgressStatus{
     progressStatus String @id
     TaskProgress TaskProgress[]
 }


// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// -- 参加者集約
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
model Participant {
  participantId String @id
  name String
  mailAddress String @unique
  // todo null許容したくないが、?をつけないとエラーになる
  enrolledParticipant EnrolledParticipant?
  pair Pair? @relation(fields: [pairId], references: [pairId])
  pairId String?
  participantHavingTask ParticipantHavingTasks[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EnrolledParticipant {
    enrolledParticipantId String @id
    participant Participant @relation(fields: [participantId], references: [participantId])
    participantId String
    enrolledStatusId EnrolledStatus @relation(fields: [enrolledStatus], references: [enrolledStatus])
    enrolledStatus String
}

model Pair {
  pairId String @id
  pairName String
  participant Participant[]
  team Team @relation(fields: [teamId], references: [teamId])
  teamId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([pairName, teamId])
}

model Team {
  teamId String @id
  teamName String @unique
  pair Pair[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// -- 課題集約
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
model Task {
  taskId String @id
  taskNo Int @unique
  taskName String @unique
  description String @unique
  taskGroupName String
  participantHavingTask ParticipantHavingTasks[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ParticipantHavingTasks{
    participantHavingTaskId String @id
    task Task @relation(fields: [taskId], references: [taskId])
    taskId String
    taskProgress TaskProgress?
    participant Participant @relation(fields: [participantId], references: [participantId])
    participantId String
}

model TaskProgress {
    taskProgressId String @id
    participantHavingTask ParticipantHavingTasks @relation(fields: [participantHavingTaskId], references: [participantHavingTaskId])
    participantHavingTaskId String
    progressStatusId ProgressStatus? @relation(fields: [progressStatus], references: [progressStatus])
    progressStatus String?
}
